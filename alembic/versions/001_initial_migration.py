"""Initial migration with all models

Revision ID: 001_initial
Revises: 
Create Date: 2025-01-19 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001_initial'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('credit_balance', sa.Integer(), nullable=False),
    sa.Column('supabase_user_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('credit_balance >= 0', name='credit_balance_non_negative'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('supabase_user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_supabase_user_id'), 'users', ['supabase_user_id'], unique=False)
    
    op.create_table('product_cache',
    sa.Column('asin', sa.String(length=20), nullable=False),
    sa.Column('marketplace', sa.String(length=10), nullable=False),
    sa.Column('product_data', sa.JSON(), nullable=False),
    sa.Column('data_source', sa.String(length=100), nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('is_stale', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('asin', 'marketplace')
    )
    op.create_index(op.f('ix_product_cache_cache_key'), 'product_cache', ['cache_key'], unique=False)
    op.create_index(op.f('ix_product_cache_expires_at'), 'product_cache', ['expires_at'], unique=False)
    
    op.create_table('fnsku_mappings',
    sa.Column('fnsku', sa.String(length=20), nullable=False),
    sa.Column('asin', sa.String(length=20), nullable=False),
    sa.Column('marketplace', sa.String(length=10), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=False),
    sa.Column('product_title', sa.Text(), nullable=True),
    sa.Column('brand', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('verification_method', sa.String(length=100), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('verified_by', sa.String(length=255), nullable=True),
    sa.Column('source_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('confidence_score >= 0 AND confidence_score <= 100', name='valid_confidence_score'),
    sa.CheckConstraint("verification_method IN ('manual', 'api', 'ml_model', 'user_feedback')", name='valid_verification_method'),
    sa.PrimaryKeyConstraint('fnsku')
    )
    op.create_index(op.f('ix_fnsku_mappings_asin'), 'fnsku_mappings', ['asin'], unique=False)
    
    op.create_table('webhook_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('event_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('received', 'processing', 'completed', 'failed')", name='valid_webhook_status'),
    sa.CheckConstraint('attempts >= 0', name='attempts_non_negative'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id')
    )
    op.create_index(op.f('ix_webhook_logs_event_id'), 'webhook_logs', ['event_id'], unique=False)
    
    op.create_table('credit_transactions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('operation', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stripe_session_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("transaction_type IN ('purchase', 'usage', 'refund', 'adjustment')", name='valid_transaction_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_transactions_created_at'), 'credit_transactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_credit_transactions_stripe_payment_intent_id'), 'credit_transactions', ['stripe_payment_intent_id'], unique=False)
    op.create_index(op.f('ix_credit_transactions_stripe_session_id'), 'credit_transactions', ['stripe_session_id'], unique=False)
    
    op.create_table('query_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query_type', sa.String(length=100), nullable=False),
    sa.Column('query_input', sa.Text(), nullable=False),
    sa.Column('credits_deducted', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('api_response_summary', sa.JSON(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('success', 'error', 'partial')", name='valid_status'),
    sa.CheckConstraint('credits_deducted >= 0', name='credits_deducted_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_query_logs_created_at'), 'query_logs', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_query_logs_created_at'), table_name='query_logs')
    op.drop_table('query_logs')
    op.drop_index(op.f('ix_credit_transactions_stripe_session_id'), table_name='credit_transactions')
    op.drop_index(op.f('ix_credit_transactions_stripe_payment_intent_id'), table_name='credit_transactions')
    op.drop_index(op.f('ix_credit_transactions_created_at'), table_name='credit_transactions')
    op.drop_table('credit_transactions')
    op.drop_index(op.f('ix_webhook_logs_event_id'), table_name='webhook_logs')
    op.drop_table('webhook_logs')
    op.drop_index(op.f('ix_fnsku_mappings_asin'), table_name='fnsku_mappings')
    op.drop_table('fnsku_mappings')
    op.drop_index(op.f('ix_product_cache_expires_at'), table_name='product_cache')
    op.drop_index(op.f('ix_product_cache_cache_key'), table_name='product_cache')
    op.drop_table('product_cache')
    op.drop_index(op.f('ix_users_supabase_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###